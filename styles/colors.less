@import "colors/primary";
@import "themes/default";
@import "user-theme";

// GUTTER
@gutter-text: @grey;
@gutter-text-highlight: @color1;
@gutter-background: @black-dark;
@gutter-background-highlight: @black;

// CODE VIEW
@code-background: @black; // editor background
@code-font-color: @white; // default editor text

// STATUS
@error: @red;
@info: @color1;
@success: @green;

// GIT STATUS
@removed: @red;
@modified: @yellow;
@added: @green;

// TEXT
@quotes: @code-font-color;
@markup: @code-font-color;
@unknown: @code-font-color;

// MISC COLORS
@invisible: rgba(255,255,255,0.1);
@guides: rgba(245,250,255,0.04);
@cursor-color: @code-font-color;
@cursor-width: 2px;
@selected: @color1-highlight; // selected background color
@selected-border: darken(@color1-highlight, 10);
@selected-line: rgba(0,0,0,0.2);
@selected-text: @color1-text;


// SEARCh
@search-bg: transparent;
@search-border: solid 1px @color1;
@search-active-bg: @color1;
@search-active-border: solid 1px @color1;
@search-item-border: @color1;
@search-item-bg: @color3;


// SYNTAX COLORS
@brackets: darken(@code-font-color, 30%);
@comment: @grey; // comments, duhr.
@comment-bg: none;
@comment-punc: @comment;
@constant: @color3; // true of var x = true, {{}} of {{> hbs_include}}
@entity: @color5; // exports of module.exports, <div id= of <div id="#id">, . of .className
@entity-function: @color5;
@function: @entity-function;
@function-param: @color1; // (one, two, three) of function (one, two, three)
@keyword: @color4; // = of var a = b, if of if a = b, px of font-size: 13px;
@meta: @code-font-color; // none of border: none;
@numeric: @color3;
@punctuation: darken(@code-font-color, 30%);
@regex: @color1;
@string: @color1; // 'value' of var='value', "name.png" or src="name.png"
@storage: @white; // var of var a = b;
@support: @color3; // module of module.exports, color of color: rgb(0,0,0)
@variable: @color1; // foo of function(foo), hbs_include of {{> hbs_include}}, http://dom.com/ of url(http://dom.com/)
@storage-function: @color8;


// HTML
@tag: @color1;
@tag-entity: @color1;
@element-attr: @color2;
@class: @color2;
@id: @color2;
@block: @color1;
@inline: lighten(@color1, 25%);
